{
  "_args": [
    [
      {
        "raw": "parse-entities@^1.0.2",
        "scope": null,
        "escapedName": "parse-entities",
        "name": "parse-entities",
        "rawSpec": "^1.0.2",
        "spec": ">=1.0.2 <2.0.0",
        "type": "range"
      },
      "/Users/enys/Desktop/dice/node_modules/remark-parse"
    ]
  ],
  "_from": "parse-entities@>=1.0.2 <2.0.0",
  "_id": "parse-entities@1.1.0",
  "_inCache": true,
  "_location": "/parse-entities",
  "_nodeVersion": "5.0.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/parse-entities-1.1.0.tgz_1469964484071_0.15948437829501927"
  },
  "_npmUser": {
    "name": "wooorm",
    "email": "tituswormer@gmail.com"
  },
  "_npmVersion": "3.3.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "parse-entities@^1.0.2",
    "scope": null,
    "escapedName": "parse-entities",
    "name": "parse-entities",
    "rawSpec": "^1.0.2",
    "spec": ">=1.0.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/remark-parse",
    "/remark-stringify"
  ],
  "_resolved": "https://registry.npmjs.org/parse-entities/-/parse-entities-1.1.0.tgz",
  "_shasum": "4bc58f35fdc8e65dded35a12f2e40223ca24a3f7",
  "_shrinkwrap": null,
  "_spec": "parse-entities@^1.0.2",
  "_where": "/Users/enys/Desktop/dice/node_modules/remark-parse",
  "author": {
    "name": "Titus Wormer",
    "email": "tituswormer@gmail.com",
    "url": "http://wooorm.com"
  },
  "bugs": {
    "url": "https://github.com/wooorm/parse-entities/issues"
  },
  "contributors": [
    {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "http://wooorm.com"
    }
  ],
  "dependencies": {
    "character-entities": "^1.0.0",
    "character-entities-legacy": "^1.0.0",
    "character-reference-invalid": "^1.0.0",
    "has": "^1.0.1",
    "is-alphanumerical": "^1.0.0",
    "is-decimal": "^1.0.0",
    "is-hexadecimal": "^1.0.0"
  },
  "description": "Parse HTML character references: fast, spec-compliant, positional information",
  "devDependencies": {
    "browserify": "^13.0.0",
    "esmangle": "^1.0.0",
    "nyc": "^7.1.0",
    "remark-cli": "^1.0.0",
    "remark-comment-config": "^4.0.0",
    "remark-github": "^5.0.0",
    "remark-lint": "^4.0.0",
    "remark-validate-links": "^4.0.0",
    "tape": "^4.2.0",
    "xo": "^0.16.0"
  },
  "directories": {},
  "dist": {
    "shasum": "4bc58f35fdc8e65dded35a12f2e40223ca24a3f7",
    "tarball": "https://registry.npmjs.org/parse-entities/-/parse-entities-1.1.0.tgz"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "5ff1136a4921a216e7baaefa23febb40d68b4712",
  "homepage": "https://github.com/wooorm/parse-entities#readme",
  "keywords": [
    "parse",
    "html",
    "character",
    "reference",
    "entity",
    "entities"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "wooorm",
      "email": "tituswormer@gmail.com"
    }
  ],
  "name": "parse-entities",
  "nyc": {
    "check-coverage": true,
    "lines": 100,
    "functions": 100,
    "branches": 100
  },
  "optionalDependencies": {},
  "readme": "# parse-entities [![Build Status][build-badge]][build-status] [![Coverage Status][coverage-badge]][coverage-status]\n\nParse HTML character references: fast, spec-compliant, positional\ninformation.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install parse-entities\n```\n\n## Usage\n\n```js\nvar decode = require('parse-entities');\n\ndecode('alpha &amp bravo');\n// alpha & bravo\n\ndecode('charlie &copycat; delta');\n// charlie ©cat; delta\n\ndecode('echo &copy; foxtrot &#8800; golf &#x1D306; hotel');\n// echo © foxtrot ≠ golf 𝌆 hotel\n```\n\n## API\n\n## `parseEntities(value[, options])`\n\n###### `options`\n\n*   `additional` (`string`, optional, default: `''`)\n    — Additional character to accept when following an ampersand (without\n    error);\n*   `attribute` (`boolean`, optional, default: `false`)\n    — Whether to parse `value` as an attribute value;\n*   `nonTerminated` (`boolean`, default: `true`)\n    — Whether to allow non-terminated entities, such as `&copycat` to\n    `©cat`.  This behaviour is spec-compliant but can lead to unexpected\n    results;\n*   `warning` ([`Function`][warning], optional)\n    — Error handler;\n*   `text` ([`Function`][text], optional)\n    — Text handler;\n*   `reference` ([`Function`][reference],\n    optional) — Reference handler;\n*   `warningContext` (`'*'`, optional)\n    — Context used when invoking `warning`;\n*   `textContext` (`'*'`, optional)\n    — Context used when invoking `text`;\n*   `referenceContext` (`'*'`, optional)\n    — Context used when invoking `reference`;\n*   `position` (`Location` or `Position`, optional)\n    — Starting `position` of `value`, useful when dealing with values\n    nested in some sort of syntax tree. The default is:\n\n    ```json\n    {\n      \"start\": {\n        \"line\": 1,\n        \"column\": 1,\n        \"offset\": 0\n      },\n      \"indent\": []\n    }\n    ```\n\n###### Returns\n\n`string` — Decoded `value`.\n\n### `function warning(reason, position, code)`\n\nError handler.\n\n###### Context\n\n`this` refers to `warningContext` when given to `parseEntities`.\n\n###### Parameters\n\n*   `reason` (`string`)\n    — Reason (human-readable) for triggering a parse error;\n*   `position` (`Position`)\n    — Place at which the parse error occurred;\n*   `code` (`number`)\n    — Identifier of reason for triggering a parse error.\n\nThe following codes are used:\n\n| Code | Example            | Note                                          |\n| ---- | ------------------ | --------------------------------------------- |\n| `1`  | `foo &amp bar`     | Missing semicolon (named)                     |\n| `2`  | `foo &#123 bar`    | Missing semicolon (numeric)                   |\n| `3`  | `Foo &bar baz`     | Ampersand did not start a reference           |\n| `4`  | `Foo &#`           | Empty reference                               |\n| `5`  | `Foo &bar; baz`    | Unknown entity                                |\n| `6`  | `Foo &#128; baz`   | [Disallowed reference][invalid]               |\n| `7`  | `Foo &#xD800; baz` | Prohibited: outside permissible unicode range |\n\n###### `function text(value, location)`\n\nText handler.\n\n###### Context\n\n`this` refers to `textContext` when given to `parseEntities`.\n\n###### Parameters\n\n*   `value` (`string`) — String of content;\n*   `location` (`Location`) — Location at which `value` starts and ends.\n\n### `function reference(value, location, source)`\n\nCharacter reference handler.\n\n###### Context\n\n`this` refers to `referenceContext` when given to `parseEntities`.\n\n###### Parameters\n\n*   `value` (`string`) — Encoded character reference;\n*   `location` (`Location`) — Location at which `value` starts and ends;\n*   `source` (`Location`) — Source of character reference.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://img.shields.io/travis/wooorm/parse-entities.svg\n\n[build-status]: https://travis-ci.org/wooorm/parse-entities\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/wooorm/parse-entities.svg\n\n[coverage-status]: https://codecov.io/github/wooorm/parse-entities\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[warning]: #function-warningreason-position-code\n\n[text]: #function-textvalue-location\n\n[reference]: #function-referencevalue-location-source\n\n[invalid]: https://github.com/wooorm/character-reference-invalid\n",
  "readmeFilename": "readme.md",
  "remarkConfig": {
    "output": true,
    "plugins": {
      "lint": {
        "heading-increment": false,
        "list-item-spacing": false,
        "no-duplicate-headings": false
      },
      "github": null,
      "comment-config": null,
      "validate-links": null
    },
    "settings": {
      "bullet": "*"
    }
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/wooorm/parse-entities.git"
  },
  "scripts": {
    "build": "npm run build-md && npm run build-bundle && npm run build-mangle",
    "build-bundle": "browserify index.js --bare -s parseEntities > parse-entities.js",
    "build-mangle": "esmangle parse-entities.js > parse-entities.min.js",
    "build-md": "remark . --quiet  --frail",
    "lint": "xo",
    "test": "npm run build && npm run lint && npm run test-coverage",
    "test-api": "node test.js",
    "test-coverage": "nyc --reporter lcov tape test.js"
  },
  "version": "1.1.0",
  "xo": {
    "space": true,
    "rules": {
      "guard-for-in": "off",
      "no-negated-condition": "off",
      "max-depth": "off",
      "max-lines": "off",
      "complexity": "off",
      "no-eq-null": "off",
      "eqeqeq": "off"
    },
    "ignores": [
      "parse-entities.js",
      "parse-entities.min.js"
    ]
  }
}
