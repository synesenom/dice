{
  "_args": [
    [
      {
        "raw": "remark-html@6.0.0",
        "scope": null,
        "escapedName": "remark-html",
        "name": "remark-html",
        "rawSpec": "6.0.0",
        "spec": "6.0.0",
        "type": "version"
      },
      "/Users/enys/Desktop/dice/node_modules/documentation"
    ]
  ],
  "_from": "remark-html@6.0.0",
  "_id": "remark-html@6.0.0",
  "_inCache": true,
  "_location": "/remark-html",
  "_nodeVersion": "7.0.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/remark-html-6.0.0.tgz_1487862935353_0.7522150659933686"
  },
  "_npmUser": {
    "name": "wooorm",
    "email": "tituswormer@gmail.com"
  },
  "_npmVersion": "4.0.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "remark-html@6.0.0",
    "scope": null,
    "escapedName": "remark-html",
    "name": "remark-html",
    "rawSpec": "6.0.0",
    "spec": "6.0.0",
    "type": "version"
  },
  "_requiredBy": [
    "/documentation"
  ],
  "_resolved": "https://registry.npmjs.org/remark-html/-/remark-html-6.0.0.tgz",
  "_shasum": "ade7d94b60e452158f28615218450682601dbfc1",
  "_shrinkwrap": null,
  "_spec": "remark-html@6.0.0",
  "_where": "/Users/enys/Desktop/dice/node_modules/documentation",
  "author": {
    "name": "Titus Wormer",
    "email": "tituswormer@gmail.com",
    "url": "http://wooorm.com"
  },
  "bugs": {
    "url": "https://github.com/wooorm/remark-html/issues"
  },
  "contributors": [
    {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "http://wooorm.com"
    }
  ],
  "dependencies": {
    "hast-util-sanitize": "^1.0.0",
    "hast-util-to-html": "^3.0.0",
    "mdast-util-to-hast": "^2.1.1",
    "xtend": "^4.0.1"
  },
  "description": "Compile Markdown to HTML with remark",
  "devDependencies": {
    "browserify": "^14.0.0",
    "commonmark.json": "^0.27.0",
    "esmangle": "^1.0.0",
    "is-hidden": "^1.0.1",
    "nyc": "^10.0.0",
    "remark": "^7.0.0",
    "remark-cli": "^2.0.0",
    "remark-github": "^7.0.0",
    "remark-preset-wooorm": "^1.0.0",
    "remark-toc": "^4.0.0",
    "tape": "^4.0.0",
    "to-vfile": "^2.0.0",
    "xo": "^0.17.1"
  },
  "directories": {},
  "dist": {
    "shasum": "ade7d94b60e452158f28615218450682601dbfc1",
    "tarball": "https://registry.npmjs.org/remark-html/-/remark-html-6.0.0.tgz"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "b6903eb3bac9494ef5e32999d5c1fd0b461e5489",
  "homepage": "https://github.com/wooorm/remark-html#readme",
  "keywords": [
    "markdown",
    "html",
    "stringify",
    "compile",
    "remark"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "wooorm",
      "email": "tituswormer@gmail.com"
    }
  ],
  "name": "remark-html",
  "nyc": {
    "check-coverage": true,
    "lines": 100,
    "functions": 100,
    "branches": 100
  },
  "optionalDependencies": {},
  "readme": "# remark-html [![Build Status][build-badge]][build-status] [![Coverage Status][coverage-badge]][coverage-status] [![Chat][chat-badge]][chat]\n\nCompile markdown to HTML with [**remark**][remark].\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install remark-html\n```\n\n## Usage\n\n```javascript\nvar remark = require('remark');\nvar html = require('remark-html');\n\nvar file = remark().use(html).processSync([\n  '# Hello & World',\n  '',\n  '**Alpha**, _bravo_, and ~~Charlie~~.'\n].join('\\n'));\n\nconsole.log(String(file));\n```\n\nYields:\n\n```html\n<h1>Hello &#x26; World</h1>\n<p><strong>Alpha</strong>, <em>bravo</em>, and <del>Charlie</del>.</p>\n```\n\n## API\n\n### `remark.use(html[, options])`\n\n##### `options`\n\nAll options except for `sanitize` are passed to\n[`hast-util-to-html`][to-html].\n\n###### `options.sanitize`\n\nHow to sanitise the output (`Object` or `boolean`, default: `false`).\n\nIf `true` or an `object`, sanitation is done by\n[`hast-util-sanitize`][sanitize].  If an object is passed in, it’s\ngiven as a schema to `sanitize`.  If `true`, input is sanitised\naccording to [GitHub’s sanitation rules][github].\n\nFor example, to add strict sanitation but allowing `className`s, use\nsomething like:\n\n```js\n// ...\nvar merge = require('deepmerge');\nvar github = require('hast-util-sanitize/lib/github');\n\nvar schema = merge(github, {attributes: {'*': ['className']}});\n\nremark().use(html, {sanitize: schema}).processSync(/*...*/);\n```\n\n## CommonMark\n\n> You still need to set `commonmark: true` in\n> [**remark**s options][remark-options].\n\n[CommonMark][] support is a goal but not (yet) a necessity.  There are\nsome (roughly 115 of 550, relating to inline precedence, lists, emphasis\nand importance) issues which I’d like to cover in the future.  Note that\nthis sounds like a lot, but they have to do with obscure differences\nwhich do not often occur in the real world.  Read more on some of the\nreasoning in [`doc/commonmark.md`][commonmark-notes].\n\n## Integrations\n\n`remark-html` works great with:\n\n*   [`wooorm/remark-toc`](https://github.com/wooorm/remark-toc), which\n    generates tables of contents;\n*   [`wooorm/remark-github`](https://github.com/wooorm/remark-github), which\n    generates references to GitHub issues, PRs, users, and more;\n*   ...and [more][remark-plugins].\n\nAll [**MDAST** nodes][mdast] can be compiled to HTML.  Unknown **MDAST**\nnodes are compiled to `div` nodes if they have `children` or `text` nodes\nif they have `value`.\n\nIn addition, **remark-html** can be told how to compile nodes through\nthree `data` properties ([more information][to-hast]):\n\n*   `hName` — Tag-name to compile as;\n*   `hChildren` — HTML content to add (instead of `children` and `value`);\n*   `hProperties` — Map of attributes to add.\n\nFor example, the following node:\n\n```js\n{\n  type: 'emphasis',\n  data: {\n    hName: 'i',\n    hProperties: {\n      className: 'foo'\n    },\n    hChildren: [{\n        type: 'text',\n        value: 'bar'\n    }]\n  },\n  children: [{\n    type: 'text',\n    value: 'baz',\n  }]\n}\n```\n\n...would yield:\n\n```markdown\n<i class=\"foo\">bar</i>\n```\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://img.shields.io/travis/wooorm/remark-html.svg\n\n[build-status]: https://travis-ci.org/wooorm/remark-html\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/wooorm/remark-html.svg\n\n[coverage-status]: https://codecov.io/github/wooorm/remark-html\n\n[chat-badge]: https://img.shields.io/gitter/room/wooorm/remark.svg\n\n[chat]: https://gitter.im/wooorm/remark\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[remark]: https://github.com/wooorm/remark\n\n[remark-options]: https://github.com/wooorm/remark#remarkprocessvalue-options-done\n\n[commonmark]: http://commonmark.org\n\n[commonmark-notes]: doc/commonmark.md\n\n[remark-plugins]: https://github.com/wooorm/remark/blob/master/doc/plugins.md#list-of-plugins\n\n[mdast]: https://github.com/wooorm/mdast\n\n[to-html]: https://github.com/wooorm/hast-util-to-html\n\n[sanitize]: https://github.com/wooorm/hast-util-sanitize\n\n[github]: https://github.com/wooorm/hast-util-sanitize#schema\n\n[to-hast]: https://github.com/wooorm/mdast-util-to-hast#note\n",
  "readmeFilename": "readme.md",
  "remarkConfig": {
    "output": true,
    "presets": "wooorm"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/wooorm/remark-html.git"
  },
  "scripts": {
    "build": "npm run build-md && npm run build-bundle && npm run build-mangle",
    "build-bundle": "browserify index.js --bare -s remarkHTML > remark-html.js",
    "build-mangle": "esmangle remark-html.js > remark-html.min.js",
    "build-md": "# remark *.md doc/*.md --quiet --frail",
    "lint": "xo",
    "test": "npm run build && npm run lint && npm run test-coverage",
    "test-api": "node test/index.js",
    "test-coverage": "nyc --reporter lcov tape test/index.js"
  },
  "version": "6.0.0",
  "xo": {
    "space": true,
    "rules": {
      "max-lines": "off"
    },
    "ignores": [
      "remark-html.js"
    ]
  }
}
